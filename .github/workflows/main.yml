name: Semantic release

on: push

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: NodeJs aufsetzen
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: GitHub Token einstellen für Private packages
        run: git config --global url."https://${{ secrets.GH_TOKEN }}@github.com/".insteadOf ssh://git@github.com/ # Personal Access Token hinzufügen um Private Github Repos installieren zu können.

      # NPM ci mit Cache
      - name: Cache dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      #

      - name: Build
        run: npm run build

      # Playright mit Cache
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      #

      - name: Storybook builden
        run: npm run build-storybook --quiet

      - name: Storybook starken und testen
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --silent" \
            "npx wait-on tcp:6006 && npm run test"

      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: rm .npmrc && npx semantic-release # .npmrc vorher löschen, da sonst NPM_TOKEN überschrieben wird, obwohl in .npmrc nicht vorhanden.
